// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BakeryShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201027155942_ShoppingCartAdded")]
    partial class ShoppingCartAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BakeryShop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Apple pies"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Pumpkin pies"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Cheesecakes"
                        });
                });

            modelBuilder.Entity("BakeryShop.Models.Pie", b =>
                {
                    b.Property<int>("PieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllergyInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPieOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PieId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Pies");

                    b.HasData(
                        new
                        {
                            PieId = 1,
                            AllergyInfo = "Contains sugar, milk, apples, gluten",
                            CategoryId = 1,
                            ImageThumbnailUrl = "https://img.grouponcdn.com/seocms/2i7116adj14eoCiYBx8SQLUzXZrq/671x671_Apple_Pie_BUYING_GUIDE_DIFFERENT_TYPES_OF_PIE_012319_ak_jpg-671x671",
                            ImageUrl = "https://img.grouponcdn.com/seocms/2i7116adj14eoCiYBx8SQLUzXZrq/671x671_Apple_Pie_BUYING_GUIDE_DIFFERENT_TYPES_OF_PIE_012319_ak_jpg-671x671",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "I remember coming home sullen one day because we'd lost a softball game. Grandma, in her wisdom, suggested, \"Maybe a slice of my homemade apple pie will make you feel better.\" One bite, and Grandma was right. If you want to learn how to make homemade apple pie filling, this is really the only recipe you need. —Maggie Greene, Granite Falls, Washington",
                            Name = "Sofia",
                            Price = 12.95m,
                            ShortDescription = "The best apple pie ever!"
                        },
                        new
                        {
                            PieId = 2,
                            AllergyInfo = "Contains sugar, milk, gluten",
                            CategoryId = 2,
                            ImageThumbnailUrl = "https://images.ctfassets.net/3s5io6mnxfqz/3RG0DDIeU6oW5XG04n2JSN/6f55a3abe26a310adf6ac1eeccbd811e/AdobeStock_177050939.jpeg?w=800&fm=jpg&fl=progressive",
                            ImageUrl = "https://images.ctfassets.net/3s5io6mnxfqz/3RG0DDIeU6oW5XG04n2JSN/6f55a3abe26a310adf6ac1eeccbd811e/AdobeStock_177050939.jpeg?w=800&fm=jpg&fl=progressive",
                            InStock = true,
                            IsPieOfTheWeek = true,
                            LongDescription = "This is absolutely the BEST homemade pumpkin pie recipe! Make it with canned or fresh pumpkin puree and up to several days ahead. Also freezes well! Thanksgiving pie never looked so good or so easy.",
                            Name = "Autumn Wonders",
                            Price = 16.45m,
                            ShortDescription = "Yummy pie for autmn."
                        },
                        new
                        {
                            PieId = 3,
                            AllergyInfo = "Contains sugar, milk, gluten",
                            CategoryId = 3,
                            ImageThumbnailUrl = "https://i2.wp.com/www.sugarspunrun.com/wp-content/uploads/2019/01/Best-Cheesecake-Recipe-2-1-of-1-4.jpg",
                            ImageUrl = "https://i2.wp.com/www.sugarspunrun.com/wp-content/uploads/2019/01/Best-Cheesecake-Recipe-2-1-of-1-4.jpg",
                            InStock = true,
                            IsPieOfTheWeek = false,
                            LongDescription = "Simple and classic! The texture is smooth, rich, and creamy, served over a crisp homemade graham cracker crust.",
                            Name = "Soft cheesecake",
                            Price = 10.20m,
                            ShortDescription = "THE BEST cheesecake of your life!"
                        });
                });

            modelBuilder.Entity("BakeryShop.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("PieId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("PieId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("BakeryShop.Models.Pie", b =>
                {
                    b.HasOne("BakeryShop.Models.Category", "Category")
                        .WithMany("Pies")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BakeryShop.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("BakeryShop.Models.Pie", "Pie")
                        .WithMany()
                        .HasForeignKey("PieId");
                });
#pragma warning restore 612, 618
        }
    }
}
